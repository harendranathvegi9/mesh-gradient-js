(function(){var STEPS_MAX_V=256;var STEPS_MAX_U=256;var STEPS_CLIP_V=64;var STEPS_CLIP_U=64;function lenSq(pa,pb){var dx=pa[0]-pb[0];var dy=pa[1]-pb[1];return dx*dx+dy*dy}function colorDeltaShiftedShort(from,to,shift){var delta=to-from;if(delta>=0){return delta>>shift}else{return-(-delta>>shift)}}function frexp_exponent(value){if(value==0)return 0;var data=new DataView(new ArrayBuffer(8));data.setFloat64(0,value);var bits=data.getUint32(0)>>>20&2047;if(bits===0){data.setFloat64(0,value*Math.pow(2,64));bits=(data.getUint32(0)>>>20&2047)-64}var exponent=bits-1022;return exponent}function double_to_short(d){return Math.round(d*65535+.5)}var MAGIC_NUMBER_FIXED_16_16=103079215104;function fixed_16_16_from_double(x){var data=new DataView(new ArrayBuffer(8));data.setFloat64(0,x+MAGIC_NUMBER_FIXED_16_16);return data.getInt32(4)}var FIXED_FRAC_BITS=8;var MAGIC_NUMBER_FIXED=26388279066624;function fixed_from_double(x){var data=new DataView(new ArrayBuffer(8));data.setFloat64(0,x+MAGIC_NUMBER_FIXED);return data.getInt32(4)}function fixed_integer_floor(x){if(x>=0){return x>>FIXED_FRAC_BITS}else{return-(-x-1>>FIXED_FRAC_BITS)-1}}function sqStepsToShift(stepsSq){var r=frexp_exponent(Math.max(1,stepsSq));return r+1>>1}function fd_init(x,y,z,w){return[x,w-x,6*(w-2*z+y),6*(w-3*z+3*y-x)]}function fd_down(f){f[3]*=.125;f[2]=f[2]*.25-f[3];f[1]=(f[1]-f[2])*.5}function fd_fwd(f){f[0]+=f[1];f[1]+=f[2];f[2]+=f[3]}function fd_fixed(f){return[fixed_16_16_from_double(256*2*f[0]),fixed_16_16_from_double(256*16*f[1]),fixed_16_16_from_double(256*16*f[2]),fixed_16_16_from_double(256*16*f[3])]}function fd_fixed_fwd(f){f[0]+=(f[1]>>5)+(f[1]>>4&1);f[1]+=f[2];f[2]+=f[3]}function bezier_steps_sq(cpoints){var tmp=lenSq(cpoints[0],cpoints[1]);tmp=Math.max(tmp,lenSq(cpoints[2],cpoints[3]));tmp=Math.max(tmp,lenSq(cpoints[0],cpoints[2])*.25);tmp=Math.max(tmp,lenSq(cpoints[1],cpoints[3])*.25);return 18*tmp}function split_bezier_1d(x,y,z,w){var x0=x;var w1=w;var tmp=.5*(y+z);var y0=.5*(x+y);var z1=.5*(z+w);var z0=.5*(y0+tmp);var y1=.5*(tmp+z1);var w0,x1;w0=x1=.5*(z0+y1);return[[x0,y0,z0,w0],[x1,y1,z1,w1]]}function split_bezier(p){var xvals=split_bezier_1d(p[0][0],p[1][0],p[2][0],p[3][0]);var yvals=split_bezier_1d(p[0][1],p[1][1],p[2][1],p[3][1]);var firstHalf=[[xvals[0][0],yvals[0][0]],[xvals[0][1],yvals[0][1]],[xvals[0][2],yvals[0][2]],[xvals[0][3],yvals[0][3]]];var secondHalf=[[xvals[1][0],yvals[1][0]],[xvals[1][1],yvals[1][1]],[xvals[1][2],yvals[1][2]],[xvals[1][3],yvals[1][3]]];return[firstHalf,secondHalf]}var INSIDE=-1;var OUTSIDE=0;var PARTIAL=1;function intersect_interval(a,b,c,d){if(c<=a&&b<=d){return INSIDE}else if(a>=d||b<=c){return OUTSIDE}else{return PARTIAL}}function setRawColorAt(data,x,y,w,h,r,g,b,a){var pos=4*(y*w+x);data[pos]=r;data[pos+1]=g;data[pos+2]=b;data[pos+3]=a}var NPIXELS=0;var OUTSIDEPIXELS=0;function draw_pixel(imgdata,width,height,coord,color){var x=coord[0];var y=coord[1];if(x>=0&&y>=0&&x<=width&&y<=height){var r=color[0]/65535;var g=color[1]/65535;var b=color[2]/65535;var a=color[3]/65535;setRawColorAt(imgdata,x,y,width,height,r,g,b,a);NPIXELS++}else{OUTSIDEPIXELS++}}function rasterize_bezier_curve(imgdata,width,height,ushift,dxu,dyu,color0,color3){var x0,y0,u;var usteps=1<<ushift;var r0=color0[0];var g0=color0[1];var b0=color0[2];var a0=color0[3];var r=r0;var g=g0;var b=b0;var a=a0;var r3=color3[0];var g3=color3[1];var b3=color3[2];var a3=color3[3];var dr=colorDeltaShiftedShort(r0,r3,ushift);var dg=colorDeltaShiftedShort(g0,g3,ushift);var db=colorDeltaShiftedShort(b0,b3,ushift);var da=colorDeltaShiftedShort(a0,a3,ushift);var xu=fd_fixed(dxu);var yu=fd_fixed(dyu);x0=fixed_from_double(dxu[0]);y0=fixed_from_double(dyu[0]);xu[0]=0;yu[0]=0;for(u=0;u<=usteps;++u){var x=fixed_integer_floor(x0+(xu[0]>>15)+(xu[0]>>14&1));var y=fixed_integer_floor(y0+(yu[0]>>15)+(yu[0]>>14&1));draw_pixel(imgdata,width,height,[x,y],[r,g,b,a]);fd_fixed_fwd(xu);fd_fixed_fwd(yu);r+=dr;g+=dg;b+=db;a+=da}}function draw_bezier_curve(imgdata,width,height,p,c0,c3){var i;var top=p[0][1];var bottom=p[0][1];for(i=1;i<4;++i){top=Math.min(top,p[i][1]);bottom=Math.max(bottom,p[i][1])}var v=intersect_interval(top,bottom,0,height);if(v===OUTSIDE){return}var left=p[0][0];var right=p[0][0];for(i=1;i<4;++i){left=Math.min(left,p[i][0]);right=Math.max(right,p[i][0])}v&=intersect_interval(left,right,0,width);if(v===OUTSIDE){return}var stepsSq=bezier_steps_sq(p);if(stepsSq>=(v==INSIDE?STEPS_MAX_U*STEPS_MAX_U:STEPS_CLIP_U*STEPS_CLIP_U)){var midc=new Array(4);var result=split_bezier(p);var first=result[0];var second=result[1];midc[0]=(c0[0]+c3[0])*.5;midc[1]=(c0[1]+c3[1])*.5;midc[2]=(c0[2]+c3[2])*.5;midc[3]=(c0[3]+c3[3])*.5;draw_bezier_curve(imgdata,width,height,first,c0,midc);draw_bezier_curve(imgdata,width,height,second,midc,c3)}else{var ushift=sqStepsToShift(stepsSq);var xu=fd_init(p[0][0],p[1][0],p[2][0],p[3][0]);var yu=fd_init(p[0][1],p[1][1],p[2][1],p[3][1]);for(var k=0;k<ushift;++k){fd_down(xu);fd_down(yu)}var ic0=[double_to_short(c0[0]),double_to_short(c0[1]),double_to_short(c0[2]),double_to_short(c0[3])];var ic3=[double_to_short(c3[0]),double_to_short(c3[1]),double_to_short(c3[2]),double_to_short(c3[3])];rasterize_bezier_curve(imgdata,width,height,ushift,xu,yu,ic0,ic3);draw_pixel(imgdata,width,height,p[3],c3)}}function rasterize_bezier_patch(imgdata,width,height,vshift,p,col){var i,k;var pv=[[],[],[],[]];var cstart=[];var cend=[];var dcstart=[];var dcend=[];var v=1<<vshift;for(i=0;i<4;++i){pv[i][0]=fd_init(p[i][0][0],p[i][1][0],p[i][2][0],p[i][3][0]);pv[i][1]=fd_init(p[i][0][1],p[i][1][1],p[i][2][1],p[i][3][1]);for(k=0;k<vshift;++k){fd_down(pv[i][0]);fd_down(pv[i][1])}}for(i=0;i<4;++i){cstart[i]=col[0][i];cend[i]=col[1][i];dcstart[i]=(col[2][i]-col[0][i])/v;dcend[i]=(col[3][i]-col[1][i])/v}v++;while(v--){var nodes=[];for(i=0;i<4;++i){nodes[i]=[pv[i][0][0],pv[i][1][0]]}draw_bezier_curve(imgdata,width,height,nodes,cstart,cend);for(i=0;i<4;++i){fd_fwd(pv[i][0]);fd_fwd(pv[i][1]);cstart[i]+=dcstart[i];cend[i]+=dcend[i]}}}function draw_bezier_patch(imgdata,width,height,p,c){var i,j,v;var top,bottom;top=bottom=p[0][0][1];for(i=0;i<4;++i){for(j=0;j<4;++j){top=Math.min(top,p[i][j][1]);bottom=Math.max(bottom,p[i][j][1])}}v=intersect_interval(top,bottom,0,height);if(v===OUTSIDE){return}var left,right;left=right=p[0][0][0];for(i=0;i<4;++i){for(j=0;j<4;++j){left=Math.min(left,p[i][j][0]);right=Math.max(right,p[i][j][0])}}v&=intersect_interval(left,right,0,width);if(v===OUTSIDE){return}var stepsSq=0;for(i=0;i<4;++i){stepsSq=Math.max(stepsSq,bezier_steps_sq(p[i]))}if(stepsSq>=(v==INSIDE?STEPS_MAX_V*STEPS_MAX_V:STEPS_CLIP_V*STEPS_CLIP_V)){var first=[];var second=[];var subc=[new Array(4),new Array(4),new Array(4),new Array(4)];for(i=0;i<4;++i){var result=split_bezier(p[i]);first[i]=result[0];second[i]=result[1]}for(i=0;i<4;++i){subc[0][i]=c[0][i];subc[1][i]=c[1][i];subc[2][i]=.5*(c[0][i]+c[2][i]);subc[3][i]=.5*(c[1][i]+c[3][i])}draw_bezier_patch(imgdata,width,height,first,subc);for(i=0;i<4;++i){subc[0][i]=subc[2][i];subc[1][i]=subc[3][i];subc[2][i]=c[2][i];subc[3][i]=c[3][i]}draw_bezier_patch(imgdata,width,height,second,subc)}else{rasterize_bezier_patch(imgdata,width,height,sqStepsToShift(stepsSq),p,c)}}function interpolateCoons(coons){if(coons.length!==12){console.error("Coons boundary of unexpected length",coons.length)}var patch=[[coons[0],coons[1],coons[2],coons[3]],[coons[11],null,null,coons[4]],[coons[10],null,null,coons[5]],[coons[9],coons[8],coons[7],coons[6]]];var pa,pb;pa=coons[1];pb=coons[8];patch[1][1]=[pa[0]+1/3*(pb[0]-pa[0]),pa[1]+1/3*(pb[1]-pa[1])];patch[2][1]=[pa[0]+2/3*(pb[0]-pa[0]),pa[1]+2/3*(pb[1]-pa[1])];pa=coons[2];pb=coons[7];patch[1][2]=[pa[0]+1/3*(pb[0]-pa[0]),pa[1]+1/3*(pb[1]-pa[1])];patch[2][2]=[pa[0]+2/3*(pb[0]-pa[0]),pa[1]+2/3*(pb[1]-pa[1])];return patch}function drawMeshGradientPatch(imgdata,width,height,coons,colors){NPIXELS=0;OUTSIDEPIXELS=0;var reorderedColors=[colors[0],colors[3],colors[1],colors[2]];var cpoints=interpolateCoons(coons);draw_bezier_patch(imgdata,width,height,cpoints,reorderedColors);if(OUTSIDEPIXELS>0){console.warn(OUTSIDEPIXELS+" pixels drawn outside")}}if(typeof window!=="undefined"){window.drawMeshGradientPatch=drawMeshGradientPatch}else if(typeof module!=="undefined"){module.exports={drawMeshGradientPatch:drawMeshGradientPatch}}})();var svg=document.querySelector("svg");var defs=document.querySelector("defs");function color_css2rgb(css){css=css.toLowerCase();if(!css.match(/^#([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$/)){return}css=css.replace(/^#/,"");var bytes=css.length/3;var max=Math.pow(16,bytes)-1;return[Math.round(255*parseInt(css.slice(0,bytes),16)/max),Math.round(255*parseInt(css.slice(bytes*1,bytes*2),16)/max),Math.round(255*parseInt(css.slice(bytes*2),16)/max)]}function parseStops(stops,preamble,colorPreamble){var cursor=[0,0];if(preamble.length>0){cursor=preamble.pop().slice()}var coons=preamble;coons.push(cursor.slice(0));var colors=colorPreamble;for(var si=0;si<stops.length;si++){var stop=stops[si];var path=stop.getAttribute("path").split(/\s+/);if(path.length!==4){console.warn(path)}for(var i=1;i<4;i++){var coord=path[i].split(",");var dx=parseInt(coord[0]);var dy=parseInt(coord[1]);coons.push([cursor[0]+dx,cursor[1]+dy]);if(i===3){cursor[0]+=dx;cursor[1]+=dy}}var style=stop.getAttribute("style");if(style){var pairs=style.split(";");var stopColor="#000000",stopOpacity=1;for(var pi=0;pi<pairs.length;pi++){var pair=pairs[pi].split(":");if(pair[0]==="stop-color"){stopColor=pair[1]}else if(pair[0]==="stop-opacity"){stopOpacity=parseInt(pair[1])}}var rgba=color_css2rgb(stopColor);rgba[3]=Math.round(255*stopOpacity);colors.push(rgba)}}if(colors.length!==4){console.error("not enough colors",colors.length)}var first=coons[0];var last=coons[coons.length-1];if(first[0]-last[0]>1||first[1]-last[1]>1){console.error("Unexpected coons",coons.join("|"),"["+coons.length+"]")}coons.pop();return{coons:coons,colors:colors}}function getMeshGradientAABB(patchData){var xmin=Infinity;var xmax=-Infinity;var ymin=Infinity;var ymax=-Infinity;for(var i=0;i<patchData.length;i++){var row=patchData[i];for(var j=0;j<row.length;j++){var data=row[j];for(var k=0;k<data.coons.length;k++){var point=data.coons[k];xmin=Math.min(xmin,point[0]);xmax=Math.max(xmax,point[0]);ymin=Math.min(ymin,point[1]);ymax=Math.max(ymax,point[1])}}}return{xmin:xmin,ymin:ymin,xmax:xmax,ymax:ymax}}function setClip(ctx,pathdata,offset){ctx.beginPath();var to,cp1,cp2;var cursor=[0,0];var parts=pathdata.split(" ");var cmd;for(var i=0;i<parts.length;){if(parts[i].indexOf(",")<0){cmd=parts[i];i++}else{}switch(cmd){case"m":to=parts[i++].split(",");cursor[0]+=parseFloat(to[0]);cursor[1]+=parseFloat(to[1]);cursor[0]-=offset[0];cursor[1]-=offset[1];ctx.moveTo(cursor[0],cursor[1]);break;case"c":cp1=parts[i++].split(",");cp2=parts[i++].split(",");to=parts[i++].split(",");ctx.bezierCurveTo(cursor[0]+parseFloat(cp1[0]),cursor[1]+parseFloat(cp1[1]),cursor[0]+parseFloat(cp2[0]),cursor[1]+parseFloat(cp2[1]),cursor[0]+parseFloat(to[0]),cursor[1]+parseFloat(to[1]));cursor[0]+=parseFloat(to[0]);cursor[1]+=parseFloat(to[1]);break;case"M":to=parts[i++].split(",");cursor[0]=parseFloat(to[0]);cursor[1]=parseFloat(to[1]);ctx.moveTo(cursor[0],cursor[1]);break;case"C":cp1=parts[i++].split(",");cp2=parts[i++].split(",");to=parts[i++].split(",");ctx.bezierCurveTo(parseFloat(cp1[0]),parseFloat(cp1[1]),parseFloat(cp2[0]),parseFloat(cp2[1]),parseFloat(to[0]),parseFloat(to[1]));cursor[0]=parseFloat(to[0]);cursor[1]=parseFloat(to[1]);break;case"z":case"Z":break;default:console.error("unexpected token",parts[i]);i++;break}}ctx.clip()}function replaceMeshGradsByPattern(patchData,mgx,mgy,mgid){var aabb=getMeshGradientAABB(patchData);var width=aabb.xmax-aabb.xmin;var height=aabb.ymax-aabb.ymin;var canvas=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");canvas.width=width;canvas.height=height;var ctx=canvas.getContext("2d");var imgdata=ctx.getImageData(0,0,width,height);for(var i=0;i<patchData.length;i++){var row=patchData[i];for(var j=0;j<row.length;j++){var data=row[j];if(data.colors.length!==4){console.error("data.colors",data.colors)}if(i===0&&j===0){}else if(i!==0&&j===0){}else if(i===0&&j!==0){}else if(i!==0&&j!==0){}drawMeshGradientPatch(imgdata.data,width,height,data.coons,data.colors)}}ctx.putImageData(imgdata,0,0);var img=document.createElementNS("http://www.w3.org/2000/svg","image");img.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",canvas.toDataURL());img.setAttribute("x","0");img.setAttribute("y","0");img.setAttribute("width",""+width);img.setAttribute("height",""+height);var existingMG=defs.querySelector("meshGradient#"+mgid);defs.removeChild(existingMG);var pattern=document.createElementNS("http://www.w3.org/2000/svg","pattern");pattern.setAttribute("width",""+width);pattern.setAttribute("height",""+height);pattern.setAttribute("x",""+mgx);pattern.setAttribute("y",""+mgy);pattern.setAttribute("id",mgid);pattern.setAttribute("patternUnits","userSpaceOnUse");pattern.appendChild(img);defs.appendChild(pattern)}function run(){var meshGradients=document.querySelectorAll("meshGradient");var data;for(var i=0;i<meshGradients.length;i++){var patchData=[];var mg=meshGradients[i];var mgid=mg.getAttribute("id");var mgx=mg.getAttribute("x");var mgy=mg.getAttribute("y");var rows=mg.querySelectorAll("meshRow");patchData=new Array(rows.length);for(var j=0;j<rows.length;j++){var row=rows[j];var patches=row.querySelectorAll("meshPatch");patchData[j]=new Array(patches.length);for(var k=0;k<patches.length;k++){var patch=patches[k];var stops=patch.querySelectorAll("stop");var pathPreamble;var colorPreamble;var left,top;if(j===0&&k===0){pathPreamble=[];colorPreamble=[]}else if(j===0&&k!==0){left=patchData[j][k-1];pathPreamble=left.coons.slice(3,7).reverse();colorPreamble=[left.colors[2],left.colors[1]]}else if(j!==0&&k===0){top=patchData[j-1][k];pathPreamble=top.coons.slice(6,10).reverse();colorPreamble=[top.colors[3],top.colors[2]]}else if(j!==0&&k!==0){left=patchData[j][k-1];top=patchData[j-1][k];var preambleLeft=left.coons.slice(4,7).reverse();var preambleTop=top.coons.slice(0,1).concat(top.coons.slice(9,13).reverse());pathPreamble=preambleLeft.concat(preambleTop);colorPreamble=[left.colors[2],left.colors[1],top.colors[3]]}data=parseStops(stops,pathPreamble,colorPreamble);patchData[j][k]=data}}replaceMeshGradsByPattern(patchData,mgx,mgy,mgid)}}run();